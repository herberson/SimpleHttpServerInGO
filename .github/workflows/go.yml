# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
        env GOARCH=arm64 GOOS=darwin go build -v -o ./dist/SimpleHttpServerInGO_darwin_arm64 ./...
        env GOARCH=arm64 GOOS=linux go build -v -o ./dist/SimpleHttpServerInGO_linux_arm64 ./...
        env GOARCH=arm64 GOOS=windows go build -v -o ./dist/SimpleHttpServerInGO_windows_arm64.exe ./...
        env GOARCH=amd64 GOOS=darwin go build -v -o ./dist/SimpleHttpServerInGO_darwin_amd64 ./...
        env GOARCH=amd64 GOOS=linux go build -v -o ./dist/SimpleHttpServerInGO_linux_amd64 ./...
        env GOARCH=amd64 GOOS=windows go build -v -o ./dist/SimpleHttpServerInGO_windows_amd64.exe ./...

    - name: Archive binaries
      uses: actions/upload-artifact@v4
      with:
        path: ./dist/*
        name: SimpleHttpServerInGO_binaries
  
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create release
        id: create_release
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes

      - name: Download artifact
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          name: SimpleHttpServerInGO_binaries
      
      - name: display
        run: ls -lha
      
      - name: Release artifact
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
        run: |
          gh release upload "$tag" \
            SimpleHttpServerInGO_binaries* \
            --repo="$GITHUB_REPOSITORY"


